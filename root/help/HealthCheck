#!/bin/bash

pids=( $(pgrep curl) )
kill -9 ${pids[@]/#/-p } &>/dev/null

return1=0
return2=0
return3=0

ownhost=$(cat /home/tor/hidden-services/service_1/hostname)

timeout 15s torsocks curl -s --http1.1 --max-time 9 "https://check.torproject.org/" | grep -qm1 Congratulations
return1=$?
if [[ $return1 == 0 ]]
then
	echo "[Pass: Tor Project Check]"
	timeout 15s torsocks curl -s -I --http1.1 --max-time 9 "http://5ekxbftvqg26oir5wle3p27ax3wksbxcecnm6oemju7bjra2pn26s3qd.onion" | grep -q 200
	return2=$?
	if [[ $return2 == 0 ]]
	then
		echo "[Pass: Debian Onion Address]"
		timeout 15 torsocks curl -s -I --http1.1 --max-time 9 "http://$ownhost" | grep -q nginx
		return3=$?
		if [[ $return3 == 0 ]]
		then
			echo "[Pass: Own <host_1> Address]"
		else
			echo "[Fail: Own <host_1> Address]"
		fi
	else
		echo "[Fail: Debian Onion Address]"
		echo "[ *** Skipping Remaining Checks *** ]"
	fi
else
	echo "[Fail: Tor Project Check]"
	echo "[ *** Skipping Remaining Checks *** ]"
fi

return=$((return1+return2+return3))
count=0

if [[ $return == 0 ]]
then
	echo 0 > /help/HealthCount
	exit 0
else
	count=$(cat /help/HealthCount)
	if [[ $count > 8 ]]
	then
		echo "Too Many Fails: Restarting TOR"
		/usr/local/bin/python3 /usr/local/bin/supervisorctl -c /etc/supervisor/supervisord.conf stop TOR
		sleep 15
		/usr/local/bin/python3 /usr/local/bin/supervisorctl -c /etc/supervisor/supervisord.conf start TOR
		pids=( $(pgrep curl) )
		kill -9 ${pids[@]/#/-p } &>/dev/null
		echo 0 > /help/HealthCount
	else
		echo $((count+1)) > /help/HealthCount
	fi
	exit 1
fi
